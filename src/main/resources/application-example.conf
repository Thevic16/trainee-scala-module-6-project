include "telemetry.conf"

cassandra {
  akka.persistence.journal.plugin = "akka.persistence.cassandra.journal"
  akka.persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    akka.persistence.cassandra.journal {
          event-adapters {
            event-projection-adapter = "com.vgomez.app.actors.messages.AbstractMessage$Event$EventProjectionAdapter"
          }

          event-adapter-bindings {
            "com.vgomez.app.actors.Restaurant$RestaurantRegistered" = event-projection-adapter
            "com.vgomez.app.actors.Restaurant$RestaurantUpdated" = event-projection-adapter
            "com.vgomez.app.actors.Restaurant$RestaurantUnregistered" = event-projection-adapter

            "com.vgomez.app.actors.Review$ReviewRegistered" = event-projection-adapter
            "com.vgomez.app.actors.Review$ReviewUpdated" = event-projection-adapter
            "com.vgomez.app.actors.Review$ReviewUnregistered" = event-projection-adapter

            "com.vgomez.app.actors.User$UserRegistered" = event-projection-adapter
            "com.vgomez.app.actors.User$UserUpdated" = event-projection-adapter
            "com.vgomez.app.actors.User$UserUnregistered" = event-projection-adapter
          }

        tables-autocreate = true
        keyspace-autocreate = true
    }

    akka.persistence.cassandra.snapshot {
        tables-autocreate = true
        keyspace-autocreate = true
    }

  datastax-java-driver {
    advanced {
        reconnect-on-init = true
      }
   }

  akka.actor.allow-java-serialization = true
}

actor-system-config {
    path = "cassandra"
    timeout = 15
}

load-dataset {
    path-csv = "target/storage/dataset/postcovid_reviews.csv"
    run = true
    chuck = 25
    # max-amount-row = -1 = infinite
    max-amount-row = 250
}

postgres = {
   connectionPool = "HikariCP"
   dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
   properties = {
     serverName = "localhost"
     portNumber = "8016"
     databaseName = "postgres"
     user = "postgres"
     password = "admin"
   }
   numThreads = 10
}

projection-database{
    path = "postgres"
}
